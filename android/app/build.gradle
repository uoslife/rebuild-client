apply plugin: "com.android.application"
apply plugin: "com.facebook.react"
apply plugin: "com.google.gms.google-services"
apply plugin: "com.google.firebase.crashlytics"

import com.android.build.OutputFile

react {}

def enableSeparateBuildPerCPUArchitecture = false
def jscFlavor = 'org.webkit:android-jsc:+'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

def reactNativeArchitectures() {
    def value = project.getProperties().get("reactNativeArchitectures")
    return value ? value.split(",") : ["armeabi-v7a", "x86", "x86_64", "arm64-v8a"]
}

android {
    ndkVersion rootProject.ext.ndkVersion
    namespace "com.beyondconnect.uoslife"
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 20002
        versionName "2.0.0"
    }

    splits {
        abi {
            reset()
            enable enableSeparateBuildPerCPUArchitecture
            universalApk false  // If true, also generate a universal APK
            include(*reactNativeArchitectures())
        }
    }

    flavorDimensions 'uoslife'

    signingConfigs {
        release {
            storeFile file('uoslife.keystore')
            keyAlias 'uoslife'
            // [1] uoslife.keystore 파일을 추가한 뒤,
            // [2] local.properties에 store_password, key_password를 추가하세요.
            storePassword properties.getProperty('store_password')
            keyPassword properties.getProperty('key_password')
        }
    }

    productFlavors {
        production {
            dimension 'uoslife'
            applicationId 'com.beyondconnect.uoslife'
            resValue "string", "CodePushDeploymentKey", '"If7Mws80gp2jcVZPFFDxsJIszDrMlMmOOUOXM"'
        }
        alpha {
            dimension 'uoslife'
            applicationId 'com.beyondconnect.alpha.uoslife'
            resValue "string", "CodePushDeploymentKey", '"ur1Tn5svNZAMrGxMdrKxKzbCO0cYf3c097pIK"'
        }
    }

    buildTypes {
        debug {
            resValue "string", "CodePushDeploymentKey", '""'
        }
        release {
            shrinkResources true
            minifyEnabled true
            signingConfig signingConfigs.release
            firebaseCrashlytics {
                nativeSymbolUploadEnabled true
                unstrippedNativeLibsDir 'build/intermediates/merged_native_libs/release/out/lib'
            }
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def versionCodes = ["armeabi-v7a": 1, "x86": 2, "arm64-v8a": 3, "x86_64": 4]
            def abi = output.getFilter(OutputFile.ABI)
            if (abi != null) {
                output.versionCodeOverride = defaultConfig.versionCode * 1000 + versionCodes.get(abi)
            }
        }
    }
}

dependencies {
    implementation("com.facebook.react:react-android")

    implementation 'com.facebook.fresco:fresco:2.0.0'
    implementation 'com.facebook.fresco:animated-webp:2.5.0'
    implementation 'com.facebook.fresco:webpsupport:2.5.0'

    implementation platform('com.google.firebase:firebase-bom:32.2.2')
    implementation 'com.google.firebase:firebase-analytics'

    debugImplementation("com.facebook.flipper:flipper:${FLIPPER_VERSION}")
    debugImplementation("com.facebook.flipper:flipper-network-plugin:${FLIPPER_VERSION}") {
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
    }
    debugImplementation("com.facebook.flipper:flipper-fresco-plugin:${FLIPPER_VERSION}")

    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}

apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)
// apply from: file("../../node_modules/react-native-code-push/android/codepush.gradle")
